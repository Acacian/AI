services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: backend-aiport
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8080:8080"
    networks:
      - ainet
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ai_data_mining:
    build:
      context: .
      dockerfile: Dockerfile.data
    container_name: ai-data-mining
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    ports:
      - "8081:8081"
    networks:
      - ainet
    restart: always
    healthcheck:
      test: [ "CMD", "python", "-c", "import torch; print(torch.cuda.device_count())" ]
      interval: 30s
      timeout: 10s
      retries: 3

  ai_pattern:
    build:
      context: .
      dockerfile: Dockerfile.pattern
    container_name: ai-pattern-analysis
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    ports:
      - "8082:8082"
    networks:
      - ainet
    restart: always
    healthcheck:
      test: [ "CMD", "python", "-c", "import torch; print(torch.cuda.device_count())" ]
      interval: 30s
      timeout: 10s
      retries: 3

  ai_risk_manage:
    build:
      context: .
      dockerfile: Dockerfile.risk
    container_name: ai-risk-management
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    ports:
      - "8083:8083"
    networks:
      - ainet
    restart: always
    healthcheck:
      test: [ "CMD", "python", "-c", "import torch; print(torch.cuda.device_count())" ]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7.0
    container_name: redis-aiport
    ports:
      - "6379:6379"
    networks:
      - ainet
    restart: on-failure
    command: >
      redis-server --appendonly yes --auto-aof-rewrite-percentage 50 --auto-aof-rewrite-min-size 128mb
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
  ainet:
    driver: bridge

volumes:
  redis-data:
